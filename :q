import finplot as fplt
import numpy as np
import pandas as pd
import requests
import ta

def process(candles):
    marcadores = []
    #aux = []
    quote = []
    for index, row in candles.iterrows():
        quote.append(row)
        print (row['open'])
        if (len(quote)>4):
            pass


        #aux = row 
        #print(row['c1'], row['c2'])
    pass


def crosspoint_strategy(fast,slow):
        
    pass



# pull some data
symbol = 'USDT-BTC'
url = 'https://bittrex.com/Api/v2.0/pub/market/GetTicks?marketName=%s&tickInterval=fiveMin' % symbol
data = requests.get(url).json()

# format it in pandas
df = pd.DataFrame(data['result'])
df = df.rename(columns={'T':'time', 'O':'open', 'C':'close', 'H':'high', 'L':'low', 'V':'volume'})
df = df.astype({'time':'datetime64[ns]'})

# create three plots
ax,ax2,ax3 = fplt.create_plot(symbol, rows=3)

# plot candle sticks
candles = df[['time','open','close','high','low']]
fplt.candlestick_ochl(candles, ax=ax)

# put an MA in there
fplt.plot(df['time'], df['close'].rolling(25).mean(), ax=ax, color='#00f', legend='ma-25')

# place some dumb markers
hi_wicks = df['high'] - df[['open','close']].T.max()
df.loc[(hi_wicks>hi_wicks.quantile(0.99)), 'marker'] = df['high']
fplt.plot(df['time'], df['marker'], ax=ax, color='#f44', style='^', legend='dumb mark')



# draw some random crap on our second plot
fplt.plot(df['time'], np.random.normal(size=len(df)), ax=ax2, color='#927', legend='stuff')
fplt.set_y_range(ax2, -1.4, +1.7) # fix y-axis range

#process(candles)

#e = ta.add_all_ta_features(df, open="open", high="high", low="low", close="close", volume="volume")
ema_14 = ta.trend.EMAIndicator(df['close'],15,True).ema_indicator()
ema_32 = ta.trend.EMAIndicator(df['close'],15,True).ema_indicator()
# put an EMA in there
fplt.plot(df['time'], ema_14, ax=ax, color='#f00', legend='ema14')
fplt.plot(df['time'], ema_32, ax=ax, color='#0f0', legend='ema32')

#print (ema_32 < ema_14)
t = np.where(ema_14  > ema_32, 1.0, 0.0)
print (t)
for e in t:
    print (t)

# finally a volume bar chart in our third plot
volumes = df[['time','open','close','volume']]
fplt.volume_ocv(volumes, ax=ax3)

# we're done
fplt.show()
#print (df['marker'])

